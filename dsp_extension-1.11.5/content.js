!function(){"use strict";const e={TABLE_ROWS:"tr",TABLE_HEADER:"thead tr",TABLE_BODY:"tbody",SERVICE_TYPE_EXPANDABLE:"td span.expandable",SERVICE_TYPE_CELL:"td.serviceType",PROVIDER_NAME:"td.providerName",DSP_CODE_CELL:"td.dspCode",CONFIRMED_CELL:'td span[data-bind*="text: confirmed"]',ROSTERED_CELL:'td[data-bind*="text: totalRostered"]',PLANNED_CELL:'td span[data-bind*="text: planned"]',NEXT_BUTTON:'button[data-bind*="click: next"]',PREV_BUTTON:'button[data-bind*="click: previous"]',REFRESH_BUTTON:'button[data-bind*="click: refresh"]',DATE_PICKER:'input[type="date"]',SERVICE_FILTER:"select.serviceTypeFilter",DSP_SEARCH:"input.dspSearch"},t={AMAZON_LOGISTICS:/^https:\/\/logistics\.amazon\.co\.uk/,ROUTE_PLANNING:/^https:\/\/.*\.route\.planning\.last-mile\.a2z\.com/,C3_AMAZON:/^https:\/\/c3\.amazon\.com/,CHIME_WEBHOOK:/^https:\/\/hooks\.chime\.aws/},r="manualCheck",s="scanRisks",a="PARSING_ERROR",i="DOM_ERROR";class n{constructor(){this.availableServiceTypes=new Set,this.currentPageServiceTypes=new Set,this.urlParams=null,this.pageType=null}initialize(){try{return this.urlParams=new URLSearchParams(window.location.search),this.pageType=this.detectPageType(),this.currentPageServiceTypes.clear(),this.inferFromURLParams(),this.inferFromDOM(),this.inferFromTableStructure(),Array.from(this.currentPageServiceTypes),this.currentPageServiceTypes}catch(e){throw console.error("ServiceTypeInferrer initialization failed:",e),e}}detectPageType(){const e=window.location.href;return t.AMAZON_LOGISTICS.test(e)?e.includes("/scheduling/dsps")?"scheduling":e.includes("/internal/")?"internal":"logistics":t.ROUTE_PLANNING.test(e)?"route_planning":t.C3_AMAZON.test(e)?"c3":"unknown"}inferFromURLParams(){try{const e=this.urlParams.get("serviceType");if(e){const t=this.mapURLServiceType(e);t&&this.currentPageServiceTypes.add(t)}"route_planning"===this.pageType&&(this.currentPageServiceTypes.add("Standard Parcel"),this.currentPageServiceTypes.add("Multi-Use"),this.currentPageServiceTypes.add("Sameday Parcel"))}catch(e){console.warn("URL parameter inference failed:",e)}}mapURLServiceType(e){return{AmazonDelivered:"Standard Parcel",DSPDelivered:"Multi-Use",SameDayParcel:"Sameday Parcel",StandardParcel:"Standard Parcel",MultiUse:"Multi-Use",SamedayParcel:"Sameday Parcel"}[e]||null}async inferFromDOM(){try{const t=document.querySelectorAll(e.SERVICE_TYPE_EXPANDABLE);for(const e of t){const t=e.textContent?.trim();if(t){const e=this.normalizeServiceType(t);e&&this.currentPageServiceTypes.add(e)}}await this.scanForServiceTypeIndicators()}catch(e){console.warn("DOM inference failed:",e)}}scanForServiceTypeIndicators(){const e=[{pattern:/standard\s*parcel/i,type:"Standard Parcel"},{pattern:/cycle\s*1/i,type:"Standard Parcel"},{pattern:/multi[-\s]*use/i,type:"Multi-Use"},{pattern:/sameday\s*b/i,type:"Multi-Use"},{pattern:/sameday\s*parcel/i,type:"Sameday Parcel"},{pattern:/sameday\s*c/i,type:"Sameday Parcel"},{pattern:/medium\s*van/i,type:"Standard Parcel Medium Van"}],t=document.body.textContent||"";for(const{pattern:r,type:s}of e)r.test(t)&&this.currentPageServiceTypes.add(s)}inferFromTableStructure(){try{const t=Array.from(document.querySelectorAll(e.TABLE));for(const e of t)this.analyzeTableForServiceTypes(e)}catch(e){console.warn("Table structure inference failed:",e)}}analyzeTableForServiceTypes(t){try{const r=Array.from(t.querySelectorAll(e.TABLE_ROWS));for(const t of r){const r=t.querySelector(e.SERVICE_TYPE_EXPANDABLE);if(r){const e=r.textContent?.trim();if(e){const t=this.normalizeServiceType(e);t&&this.currentPageServiceTypes.add(t)}}const s=t.textContent||"";this.scanTextForServiceTypes(s)}}catch(e){console.warn("Table analysis failed:",e)}}scanTextForServiceTypes(e){const t=[{regex:/standard\s+parcel(?!\s+medium\s+van)/i,type:"Standard Parcel"},{regex:/standard\s+parcel\s+medium\s+van/i,type:"Standard Parcel Medium Van"},{regex:/multi[-\s]*use/i,type:"Multi-Use"},{regex:/sameday\s+parcel/i,type:"Sameday Parcel"},{regex:/cycle\s*1/i,type:"Standard Parcel"},{regex:/sameday\s*b/i,type:"Multi-Use"},{regex:/sameday\s*c/i,type:"Sameday Parcel"}];for(const{regex:r,type:s}of t)r.test(e)&&this.currentPageServiceTypes.add(s)}normalizeServiceType(e){if(!e)return null;const t=e.trim().toLowerCase(),r={"standard parcel":"Standard Parcel","standard parcel medium van":"Standard Parcel Medium Van","multi-use":"Multi-Use","multi use":"Multi-Use",multiuse:"Multi-Use","sameday parcel":"Sameday Parcel","same day parcel":"Sameday Parcel","sameday b":"Multi-Use",samedayb:"Multi-Use","sameday c":"Sameday Parcel",samedayc:"Sameday Parcel","cycle 1":"Standard Parcel",cycle1:"Standard Parcel"};return r[t]?r[t]:t.includes("standard")&&t.includes("parcel")?t.includes("medium")||t.includes("van")?"Standard Parcel Medium Van":"Standard Parcel":t.includes("multi")||t.includes("same")&&t.includes("b")?"Multi-Use":t.includes("sameday")&&(t.includes("parcel")||t.includes("c"))?"Sameday Parcel":null}getCurrentPageServiceTypes(){return this.currentPageServiceTypes}getAvailableServiceTypes(){return this.availableServiceTypes}hasServiceType(e){return this.currentPageServiceTypes.has(e)}getPageType(){return this.pageType}addServiceType(e){this.currentPageServiceTypes.add(e)}removeServiceType(e){this.currentPageServiceTypes.delete(e)}clear(){this.currentPageServiceTypes.clear()}getStatistics(){return{detectedCount:this.currentPageServiceTypes.size,detectedTypes:Array.from(this.currentPageServiceTypes),pageType:this.pageType,hasURL:!!this.urlParams,urlServiceType:this.urlParams?.get("serviceType")||null}}}function o(e,t=0){if(null==e||""===e)return t;const r=parseInt(e,10);return isNaN(r)?t:r}class c extends Error{constructor(e,t,r={}){super(e),this.name=this.constructor.name,this.code=t,this.details=r,this.timestamp=(new Date).toISOString(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}toJSON(){return{name:this.name,message:this.message,code:this.code,details:this.details,timestamp:this.timestamp,stack:this.stack}}getUserMessage(){return this.details.userMessage||this.message}}class l extends c{constructor(e,t={}){super(e,a,t)}static fromCSVError(e,t,r){return new l(`CSV parsing failed at line ${t}`,{fileName:e,lineNumber:t,originalError:r?.message,userMessage:`Failed to parse file "${e}" at line ${t}. Please check the file format.`})}static fromExcelError(e,t){return new l(`Excel file parsing failed: ${e}`,{fileName:e,originalError:t?.message,userMessage:`Failed to parse Excel file "${e}". Please ensure it's a valid Excel file.`})}}class h extends c{constructor(e,t={}){super(e,i,t)}static fromElementNotFound(e,t="page"){return new h(`Element not found: ${e}`,{selector:e,context:t,userMessage:"Page content not found. Please ensure you are on the correct Amazon logistics page."})}static fromDataExtraction(e,t){return new h(`Data extraction failed: ${e}`,{operation:e,originalError:t?.message,userMessage:"Failed to read data from the page. The page format may have changed."})}}class d{static logError(e,t=""){const r={context:t,timestamp:(new Date).toISOString(),error:e instanceof c?e.toJSON():{name:e.name,message:e.message,stack:e.stack}};console.error("Extension Error:",r),"undefined"!=typeof window&&window.gtag&&window.gtag("event","exception",{description:e.message,fatal:!1})}static notifyUser(e,t="An unexpected error occurred"){const r=e instanceof c?e.getUserMessage():t;browser?.notifications?.create&&browser.notifications.create({type:"basic",iconUrl:"icons/icon.svg",title:"DSP Extension Error",message:r}).catch(console.error),console.warn("User notification:",r)}static async handleAsyncError(e,t=""){try{return await e}catch(e){throw this.logError(e,t),e}}static createErrorBoundary(e,t=""){return async(...r)=>{try{return await e(...r)}catch(e){throw this.logError(e,t),this.notifyUser(e),e}}}}function u(e,t=""){return d.createErrorBoundary(e,t)}class m{constructor(e){this.serviceInferrer=e,this.dspTotals=new Map,this.lastUpdateTime=null}async parseAllServiceTypes(){try{const e=this.serviceInferrer.getCurrentPageServiceTypes(),t=new Map;for(const r of e)try{const e=await this.parseForServiceType(r);e&&e.size>0&&t.set(r,e)}catch(e){console.warn(`Failed to parse data for service type ${r}:`,e)}return this.lastUpdateTime=new Date,t}catch(e){throw new l("Failed to parse DSP data for all service types",{originalError:e.message})}}async parseForServiceType(e){try{const t=await this.getTableRows(),r=this.findServiceSection(t,e);return r&&0!==r.length?this.extractDSPData(r,e):(console.warn(`No data found for service type: ${e}`),new Map)}catch(t){throw new l(`Failed to parse service type: ${e}`,{serviceType:e,originalError:t.message})}}async getTableRows(){try{const t=await this.waitForTable(),r=Array.from(t.querySelectorAll(e.TABLE_ROWS));if(0===r.length)throw new h("No table rows found",{selector:e.TABLE_ROWS,context:"DSP data table"});return r}catch(t){throw h.fromElementNotFound(e.TABLE,"DSP data table")}}waitForTable(){return new Promise((t,r)=>{const s=document.querySelector(e.TABLE);if(s)return void t(s);const a=new MutationObserver(()=>{const r=document.querySelector(e.TABLE);r&&(a.disconnect(),t(r))});a.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{a.disconnect(),r(new h("Table load timeout",{selector:e.TABLE,timeout:1e4}))},1e4)})}findServiceSection(t,r){const s=[];let a=!1,i=null;for(const n of t){const t=n.querySelector(e.SERVICE_TYPE_EXPANDABLE);t?(i=t.textContent?.trim(),a=this.isMatchingServiceType(i,r),a&&s.push(n)):a&&this.isDSPDataRow(n)&&s.push(n)}return s}isMatchingServiceType(e,t){if(!e||!t)return!1;const r=e=>e.toLowerCase().replace(/\s+/g," ").trim(),s=r(e),a=r(t);if(s===a)return!0;const i={"standard parcel":["standard","parcel","cycle1","cycle 1"],"multi-use":["multi","multiuse","multi use","sameday b","samedayb"],"sameday parcel":["sameday","same day","sameday c","samedayc"]};for(const[e,t]of Object.entries(i))if((a.includes(e)||t.some(e=>a.includes(e)))&&(s.includes(e)||t.some(e=>s.includes(e))))return!0;return!1}isDSPDataRow(t){const r=t.querySelector(e.PROVIDER_NAME),s=t.querySelector(e.CONFIRMED_CELL),a=t.querySelector(e.ROSTERED_CELL);return r&&(s||a)}extractDSPData(e,t){const r=new Map;for(const s of e)if(this.isDSPDataRow(s))try{const e=this.parseRowData(s,t);e&&r.set(e.name,e)}catch(e){console.warn("Failed to parse row data:",e)}return r.size,r}parseRowData(t,r){try{const s=t.querySelector(e.PROVIDER_NAME),a=t.querySelector(e.CONFIRMED_CELL),i=t.querySelector(e.ROSTERED_CELL);if(!s)return null;const n=s.textContent?.trim();if(!n)return null;const c=a?o(a.textContent,0):0,l=i?o(i.textContent,0):0,h=c-l;return{name:n,serviceType:r,confirmed:c,rostered:l,mismatch:h,hasMismatch:0!==h,timestamp:(new Date).toISOString(),rowElement:t}}catch(e){throw new l("Failed to parse row data",{serviceType:r,originalError:e.message})}}getDSPByName(e){const t=[];for(const[r,s]of this.dspTotals)s.has(e)&&t.push({serviceType:r,...s.get(e)});return t}getMismatchedDSPs(){const e=[];for(const[t,r]of this.dspTotals)for(const[s,a]of r)a.hasMismatch&&e.push({serviceType:t,dspName:s,...a});return e.sort((e,t)=>Math.abs(t.mismatch)-Math.abs(e.mismatch))}getSummaryStats(){let e=0,t=0,r=0,s=0;for(const a of this.dspTotals.values())for(const i of a.values())e++,r+=i.confirmed,s+=i.rostered,i.hasMismatch&&t++;return{totalDSPs:e,totalMismatches:t,totalConfirmed:r,totalRostered:s,mismatchPercentage:e>0?(t/e*100).toFixed(1):0,lastUpdateTime:this.lastUpdateTime}}async refresh(){return this.dspTotals=await this.parseAllServiceTypes(),this.dspTotals}getCachedData(){return this.dspTotals}}class g{constructor(e={}){this.config={highlightColor:"#ffebee",highlightBorderColor:"#f44336",highlightTextColor:"#d32f2f",animationDuration:"0.3s",...e},this.highlightedElements=new Set,this.highlightedRows=new Map,this.styleElement=null,this.createStyles()}createStyles(){document.getElementById("dsp-highlighter-styles")||(this.styleElement=document.createElement("style"),this.styleElement.id="dsp-highlighter-styles",this.styleElement.textContent=`\n            .dsp-mismatch-highlight {\n                background-color: ${this.config.highlightColor} !important;\n                border: 2px solid ${this.config.highlightBorderColor} !important;\n                border-radius: 4px !important;\n                transition: all ${this.config.animationDuration} ease-in-out !important;\n                position: relative !important;\n            }\n\n            .dsp-mismatch-highlight::before {\n                content: '';\n                position: absolute;\n                top: -2px;\n                left: -2px;\n                right: -2px;\n                bottom: -2px;\n                background: linear-gradient(45deg, ${this.config.highlightBorderColor}, transparent);\n                border-radius: 6px;\n                z-index: -1;\n                animation: dsp-pulse 2s infinite;\n            }\n\n            .dsp-mismatch-cell {\n                background-color: ${this.config.highlightColor} !important;\n                color: ${this.config.highlightTextColor} !important;\n                font-weight: bold !important;\n                padding: 2px 4px !important;\n                border-radius: 3px !important;\n            }\n\n            .dsp-mismatch-badge {\n                display: inline-block;\n                background-color: ${this.config.highlightBorderColor};\n                color: white;\n                font-size: 0.8em;\n                font-weight: bold;\n                padding: 2px 6px;\n                border-radius: 10px;\n                margin-left: 8px;\n                animation: dsp-bounce 1s ease-in-out;\n            }\n\n            .dsp-positive-mismatch {\n                background-color: #e8f5e8 !important;\n                border-color: #4caf50 !important;\n            }\n\n            .dsp-negative-mismatch {\n                background-color: #ffebee !important;\n                border-color: #f44336 !important;\n            }\n\n            @keyframes dsp-pulse {\n                0%, 100% { opacity: 0.7; }\n                50% { opacity: 0.3; }\n            }\n\n            @keyframes dsp-bounce {\n                0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n                40% { transform: translateY(-3px); }\n                60% { transform: translateY(-1px); }\n            }\n\n            .dsp-highlight-summary {\n                position: fixed;\n                top: 20px;\n                right: 20px;\n                background: white;\n                border: 2px solid ${this.config.highlightBorderColor};\n                border-radius: 8px;\n                padding: 12px 16px;\n                box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n                z-index: 10000;\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;\n                font-size: 14px;\n                max-width: 300px;\n            }\n\n            .dsp-highlight-summary h3 {\n                margin: 0 0 8px 0;\n                color: ${this.config.highlightBorderColor};\n                font-size: 16px;\n            }\n\n            .dsp-highlight-summary .close-btn {\n                position: absolute;\n                top: 8px;\n                right: 12px;\n                background: none;\n                border: none;\n                font-size: 18px;\n                cursor: pointer;\n                color: #999;\n            }\n\n            .dsp-highlight-summary .close-btn:hover {\n                color: ${this.config.highlightBorderColor};\n            }\n        `,document.head.appendChild(this.styleElement))}highlightAllMismatches(e){try{this.clearAllHighlights();const t={totalHighlighted:0,mismatches:[],serviceTypeCounts:{}};for(const[r,s]of e){const e=this.highlightServiceTypeMismatches(r,s);t.totalHighlighted+=e.highlighted,t.mismatches.push(...e.mismatches),t.serviceTypeCounts[r]=e.highlighted}return this.showHighlightSummary(t),t.totalHighlighted,Object.keys(t.serviceTypeCounts).length,t}catch(e){throw console.error("Highlighting failed:",e),new h("Failed to highlight mismatches",{originalError:e.message})}}highlightServiceTypeMismatches(e,t){const r={highlighted:0,mismatches:[]};for(const[s,a]of t)if(a.hasMismatch&&a.rowElement)try{this.highlightRow(a.rowElement,a,e),r.highlighted++,r.mismatches.push({dspName:s,serviceType:e,mismatch:a.mismatch,confirmed:a.confirmed,rostered:a.rostered})}catch(e){console.warn(`Failed to highlight row for ${s}:`,e)}return r}highlightRow(e,t,r){if(!e||this.highlightedRows.has(e))return;const s=t.mismatch>0?"dsp-positive-mismatch":"dsp-negative-mismatch";e.classList.add("dsp-mismatch-highlight",s),this.highlightMismatchCells(e,t),this.addMismatchBadge(e,t),this.highlightedRows.set(e,{data:t,serviceType:r,timestamp:Date.now()}),this.highlightedElements.add(e),t.name,t.mismatch,t.mismatch}highlightMismatchCells(t,r){const s=t.querySelector(e.CONFIRMED_CELL),a=t.querySelector(e.ROSTERED_CELL);s&&(s.classList.add("dsp-mismatch-cell"),this.highlightedElements.add(s)),a&&(a.classList.add("dsp-mismatch-cell"),this.highlightedElements.add(a))}addMismatchBadge(t,r){const s=t.querySelector(e.PROVIDER_NAME);if(!s)return;if(s.querySelector(".dsp-mismatch-badge"))return;const a=document.createElement("span");a.className="dsp-mismatch-badge",a.textContent=`${r.mismatch>0?"+":""}${r.mismatch}`,a.title=`Mismatch: ${r.confirmed} confirmed vs ${r.rostered} rostered`,s.appendChild(a),this.highlightedElements.add(a)}showHighlightSummary(e){const t=document.getElementById("dsp-highlight-summary");if(t&&t.remove(),0===e.totalHighlighted)return;const r=document.createElement("div");r.id="dsp-highlight-summary",r.className="dsp-highlight-summary";const s=document.createElement("button");s.className="close-btn",s.textContent="×",s.onclick=()=>r.remove();const a=document.createElement("h3");a.textContent=`${e.totalHighlighted} Mismatches Found`;const i=document.createElement("div"),n=document.createElement("div");n.style.marginBottom="8px";const o=document.createElement("strong");o.textContent="By Service Type:",n.appendChild(o),n.appendChild(document.createElement("br")),Object.entries(e.serviceTypeCounts).filter(([,e])=>e>0).forEach(([e,t])=>{const r=document.createElement("div");r.textContent=`• ${e}: ${t}`,n.appendChild(r)});const c=document.createElement("div");c.style.fontSize="12px",c.style.color="#666",c.textContent="Click rows for details. Auto-hide in 10s.",i.appendChild(n),i.appendChild(c),r.appendChild(s),r.appendChild(a),r.appendChild(i),document.body.appendChild(r),setTimeout(()=>{r.parentNode&&r.remove()},1e4),this.highlightedElements.add(r)}clearAllHighlights(){for(const e of this.highlightedElements)e&&e.parentNode&&(e.classList&&e.classList.remove("dsp-mismatch-highlight","dsp-mismatch-cell","dsp-positive-mismatch","dsp-negative-mismatch"),e.classList&&e.classList.contains("dsp-mismatch-badge")&&e.remove(),"dsp-highlight-summary"===e.id&&e.remove());this.highlightedElements.clear(),this.highlightedRows.clear()}highlightSpecificDSP(e,t){let r=0;for(const[s,a]of t)if(a.has(e)){const t=a.get(e);t.rowElement&&(this.highlightRow(t.rowElement,t,s),r++)}return r}toggleServiceTypeHighlighting(e,t){const r=Array.from(this.highlightedRows.entries()).filter(([,t])=>t.serviceType===e);if(r.length>0){for(const[e]of r)this.removeRowHighlight(e);return!1}return this.highlightServiceTypeMismatches(e,t),!0}removeRowHighlight(e){if(!this.highlightedRows.has(e))return;e.classList.remove("dsp-mismatch-highlight","dsp-positive-mismatch","dsp-negative-mismatch");e.querySelectorAll(".dsp-mismatch-cell").forEach(e=>{e.classList.remove("dsp-mismatch-cell"),this.highlightedElements.delete(e)});e.querySelectorAll(".dsp-mismatch-badge").forEach(e=>{e.remove(),this.highlightedElements.delete(e)}),this.highlightedRows.delete(e),this.highlightedElements.delete(e)}getStatistics(){const e={totalHighlighted:this.highlightedRows.size,byServiceType:{},oldestHighlight:null,newestHighlight:null};let t=1/0,r=0;for(const[,s]of this.highlightedRows){const{serviceType:a,timestamp:i}=s;e.byServiceType[a]||(e.byServiceType[a]=0),e.byServiceType[a]++,i<t&&(t=i,e.oldestHighlight=new Date(i)),i>r&&(r=i,e.newestHighlight=new Date(i))}return e}cleanup(){this.clearAllHighlights(),this.styleElement&&this.styleElement.parentNode&&this.styleElement.remove()}}class p{constructor(){this.expectedHeaders={tracking:["tracking","tracking id","tracking number","package id"],dsp:["dsp","dsp code","delivery service partner","provider"],status:["status","delivery status","package status"],route:["route","route id","route number"],driver:["driver","driver name","driver id"],reason:["reason","failure reason","delivery reason"]}}extractManifestTrackingMapFromPage(){try{const e=Array.from(document.querySelectorAll("table"));let t=null,r=0;for(const s of e){const e=this.scoreTableForManifestData(s);e>r&&(r=e,t=s)}return!t||r<2?(console.warn("No suitable manifest table found"),{}):this.extractDataFromTable(t)}catch(e){throw new l("Failed to extract manifest data",{originalError:e.message})}}scoreTableForManifestData(e){const t=this.getTableHeaders(e);let r=0;for(const[e,s]of Object.entries(this.expectedHeaders))for(const a of t)for(const t of s)if(a.toLowerCase().includes(t)){r+="tracking"===e?3:1;break}const s=e.querySelectorAll("tbody tr").length;return s>10&&(r+=1),s>50&&(r+=1),s>100&&(r+=1),r}getTableHeaders(e){const t=e.querySelector("thead tr")||e.querySelector("tr");return t?Array.from(t.querySelectorAll("th, td")).map(e=>e.textContent?.trim()||"").filter(e=>e.length>0):[]}extractDataFromTable(e){const t=this.getTableHeaders(e),r=this.createHeaderMap(t);if(!r.tracking)throw new l("No tracking ID column found in manifest table");const s={},a=Array.from(e.querySelectorAll("tbody tr")||e.querySelectorAll("tr")).slice(1);for(const[e,t]of a.entries())try{const a=Array.from(t.querySelectorAll("td, th")),i=this.extractRowData(a,r,e);i&&i.tracking&&(s[i.tracking]=i)}catch(t){console.warn(`Failed to parse manifest row ${e}:`,t)}return Object.keys(s).length,s}createHeaderMap(e){const t={};for(const[r,s]of Object.entries(this.expectedHeaders))for(const[a,i]of e.entries()){const e=i.toLowerCase();for(const i of s)if(e.includes(i)){t[r]=a;break}if(void 0!==t[r])break}return t}extractRowData(e,t,r){const s=r=>{const s=t[r];return void 0!==s&&e[s]?e[s].textContent?.trim():""},a=s("tracking");return a?{tracking:a,dsp:s("dsp"),status:s("status"),route:s("route"),driver:s("driver"),reason:s("reason"),rowIndex:r,extractedAt:(new Date).toISOString()}:null}extractDSPSummariesFromRoutePlanning(e=[],t=525){try{const r=Array.from(document.querySelectorAll("table")),s={};for(const a of r){const r=this.extractSummariesFromTable(a,e,t);Object.assign(s,r)}return Object.keys(s).length,s}catch(e){throw new l("Failed to extract DSP summaries",{originalError:e.message})}}extractSummariesFromTable(e,t,r){const s={},a=Array.from(e.querySelectorAll("tbody tr, tr"));for(const e of a)try{const a=this.extractSummaryFromRow(e,r);a&&a.dsp&&(0===t.length||t.includes(a.dsp))&&(s[a.dsp]=a)}catch(e){continue}return s}extractSummaryFromRow(e,t){const r=Array.from(e.querySelectorAll("td, th"));if(r.length<3)return null;let s=null;for(let e=0;e<Math.min(3,r.length);e++){const t=r[e].textContent?.trim();if(t&&/^[A-Z]{2,4}\d{0,2}$/.test(t)){s=t;break}}if(!s)return null;const a=r.map(e=>o(e.textContent?.trim()||"",0)).filter(e=>e>0);if(a.length<2)return null;const[i=0,n=0,c=0]=a;return{dsp:s,routeCount:i,stopCount:n,packageCount:c,paidTimeMinutes:t,utilization:this.calculateUtilization(i,n,t),extractedAt:(new Date).toISOString()}}calculateUtilization(e,t,r){const s=r/60,a=e>0?t/e:0,i=s>0?t/s:0;return{avgStopsPerRoute:Math.round(10*a)/10,stopsPerHour:Math.round(10*i)/10,routeUtilization:Math.min(100,Math.round(e/10*100)),timeUtilization:Math.round(3*t/r*100)}}getStatistics(){const e=Array.from(document.querySelectorAll("table")),t=e.reduce((e,t)=>e+t.querySelectorAll("tr").length,0);return{tableCount:e.length,totalRows:t,lastExtraction:(new Date).toISOString()}}}class y{constructor(){this.expectedHeaders={tracking:["tracking","tracking id","tracking number","package id"],dsp:["dsp","dsp code","delivery service partner","provider"],reason:["reason","failure reason","delivery reason","unable reason"],status:["status","delivery status","package status"],attempt:["attempt","attempt number","delivery attempt"],location:["location","address","delivery location"],timestamp:["time","timestamp","delivery time","attempt time"]},this.reasonMappings={"customer not available":"Customer Not Available","customer refused":"Customer Refused","address issue":"Address Issue","access issue":"Access Issue","package damaged":"Package Damaged",weather:"Weather","vehicle issue":"Vehicle Issue","unable to access":"Unable to Access","no safe location":"No Safe Location",other:"Other"}}extractBackbriefFromPage(e=[],t=!0){try{const r=Array.from(document.querySelectorAll("table"));let s=null,a=0;for(const e of r){const t=this.scoreTableForBackbriefData(e);t>a&&(a=t,s=e)}if(!s||a<2)return console.warn("No suitable backbrief table found"),[];const i=this.extractDataFromTable(s,e,t);return i.length,i}catch(e){throw new l("Failed to extract backbrief data",{originalError:e.message})}}scoreTableForBackbriefData(e){const t=this.getTableHeaders(e);let r=0;for(const[e,s]of Object.entries(this.expectedHeaders))for(const a of t)for(const t of s)if(a.toLowerCase().includes(t)){r+="reason"===e?3:1;break}const s=e.textContent?.toLowerCase()||"",a=["failed","unable","refused","damaged","weather","access"];for(const e of a)if(s.includes(e)){r+=1;break}return r}getTableHeaders(e){const t=e.querySelector("thead tr")||e.querySelector("tr");return t?Array.from(t.querySelectorAll("th, td")).map(e=>e.textContent?.trim()||"").filter(e=>e.length>0):[]}extractDataFromTable(e,t,r){const s=this.getTableHeaders(e),a=this.createHeaderMap(s);if(!a.tracking&&!a.dsp)throw new l("No tracking ID or DSP column found in backbrief table");const i=[],n=Array.from(e.querySelectorAll("tbody tr")||e.querySelectorAll("tr")).slice(1);for(const[e,s]of n.entries())try{const n=Array.from(s.querySelectorAll("td, th")),o=this.extractRowData(n,a,e,r);o&&this.shouldIncludeRecord(o,t)&&i.push(o)}catch(t){console.warn(`Failed to parse backbrief row ${e}:`,t)}return i}createHeaderMap(e){const t={};for(const[r,s]of Object.entries(this.expectedHeaders))for(const[a,i]of e.entries()){const e=i.toLowerCase();for(const i of s)if(e.includes(i)){t[r]=a;break}if(void 0!==t[r])break}return t}extractRowData(e,t,r,s){const a=r=>{const s=t[r];return void 0!==s&&e[s]?e[s].textContent?.trim():""},i=a("tracking"),n=a("dsp");if(!i&&!n)return null;let c=a("reason");s&&c&&(c=this.mapUnableToAccessReason(c));const l={tracking:i||"N/A",dsp:n||"Unknown",reason:c||"Unknown",status:a("status"),attempt:o(a("attempt"),1),location:a("location"),timestamp:a("timestamp"),rowIndex:r,extractedAt:(new Date).toISOString()};return l.normalizedReason=this.normalizeReason(l.reason),l}mapUnableToAccessReason(e){const t=e.toLowerCase();return t.includes("unable to access")||t.includes("no access")?t.includes("gate")||t.includes("locked")?"Access Issue - Gate/Lock":t.includes("business closed")?"Access Issue - Business Closed":t.includes("building")||t.includes("apartment")?"Access Issue - Building":"Access Issue - General":e}normalizeReason(e){if(!e)return"Unknown";const t=e.toLowerCase();for(const[e,r]of Object.entries(this.reasonMappings))if(t.includes(e))return r;return e.replace(/[^\w\s-]/g,"").replace(/\s+/g," ").trim().split(" ").map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join(" ")}shouldIncludeRecord(e,t){if(0===t.length)return!0;const r=e.normalizedReason.toLowerCase();return t.some(e=>{const t=e.toLowerCase();return r.includes(t)||t.includes(r)})}extractOngoingRisksFromPage(){try{const e={dsp:["dsp","dsp code","provider"],riskType:["risk type","risk","issue type","alert type"],severity:["severity","level","priority"],description:["description","details","issue","alert"],status:["status","state"],lastUpdate:["last update","updated","timestamp"]},t=Array.from(document.querySelectorAll("table")),r=[];for(const s of t){const t=this.extractRisksFromTable(s,e);r.push(...t)}return r.length,r}catch(e){throw new l("Failed to extract ongoing risks",{originalError:e.message})}}extractRisksFromTable(e,t){const r=this.getTableHeaders(e),s={};for(const[e,a]of Object.entries(t))for(const[t,i]of r.entries()){const r=i.toLowerCase();for(const i of a)if(r.includes(i)){s[e]=t;break}if(void 0!==s[e])break}if(!s.dsp&&!s.riskType)return[];const a=[],i=Array.from(e.querySelectorAll("tbody tr")||e.querySelectorAll("tr")).slice(1);for(const[e,t]of i.entries())try{const r=Array.from(t.querySelectorAll("td, th")),i=this.extractRiskFromRow(r,s,e);i&&a.push(i)}catch(t){console.warn(`Failed to parse risk row ${e}:`,t)}return a}extractRiskFromRow(e,t,r){const s=r=>{const s=t[r];return void 0!==s&&e[s]?e[s].textContent?.trim():""},a=s("dsp"),i=s("riskType");return a||i?{dsp:a||"Unknown",riskType:i||"Unknown",severity:s("severity")||"Unknown",description:s("description"),status:s("status")||"Active",lastUpdate:s("lastUpdate"),rowIndex:r,extractedAt:(new Date).toISOString()}:null}getStatistics(){const e=Array.from(document.querySelectorAll("table")),t=e.reduce((e,t)=>e+t.querySelectorAll("tr").length,0);return{tableCount:e.length,totalRows:t,hasReasonColumn:this.hasReasonColumn(),hasTrackingColumn:this.hasTrackingColumn(),lastExtraction:(new Date).toISOString()}}hasReasonColumn(){const e=Array.from(document.querySelectorAll("table"));for(const t of e){const e=this.getTableHeaders(t);for(const t of e)if(this.expectedHeaders.reason.some(e=>t.toLowerCase().includes(e)))return!0}return!1}hasTrackingColumn(){const e=Array.from(document.querySelectorAll("table"));for(const t of e){const e=this.getTableHeaders(t);for(const t of e)if(this.expectedHeaders.tracking.some(e=>t.toLowerCase().includes(e)))return!0}return!1}}class f{constructor(){this.serviceInferrer=new n,this.dataParser=new m(this.serviceInferrer),this.highlighter=new g,this.manifestExtractor=new p,this.backbriefExtractor=new y,this.isInitialized=!1,this.currentData=new Map,this.isAmazonLogisticsPage=this.checkIfAmazonLogisticsPage(),this.setupEventListeners(),this.initialize()}checkIfAmazonLogisticsPage(){const e=window.location.href;return t.AMAZON_LOGISTICS.test(e)||t.ROUTE_PLANNING.test(e)||t.C3_AMAZON.test(e)}async initialize(){try{if(!this.isAmazonLogisticsPage)return;await this.waitForPageReady(),await this.serviceInferrer.initialize(),await this.refreshData(),this.isInitialized=!0,this.setupPeriodicRefresh()}catch(e){d.logError(e,"ContentScriptManager.initialize"),console.error("❌ Content script initialization failed:",e)}}waitForPageReady(){return new Promise(e=>{if("complete"===document.readyState)return void e();const t=()=>{"complete"===document.readyState&&(document.removeEventListener("readystatechange",t),e())};document.addEventListener("readystatechange",t),setTimeout(e,5e3)})}setupEventListeners(){browser.runtime.onMessage.addListener(u(this.handleMessage.bind(this),"ContentScriptManager.handleMessage")),window.addEventListener("popstate",u(this.handleNavigation.bind(this),"ContentScriptManager.handleNavigation")),this.setupMutationObserver()}setupMutationObserver(){new MutationObserver(u(this.handleDOMChanges.bind(this),"ContentScriptManager.handleDOMChanges")).observe(document.body,{childList:!0,subtree:!0,attributes:!1})}handleDOMChanges(e){clearTimeout(this.domChangeTimeout),this.domChangeTimeout=setTimeout(async()=>{try{e.some(e=>Array.from(e.addedNodes).some(e=>e.nodeType===Node.ELEMENT_NODE&&("TABLE"===e.tagName||e.querySelector("table"))))&&await this.refreshData()}catch(e){console.warn("DOM change handling failed:",e)}},1e3)}async handleNavigation(){this.isInitialized=!1,this.currentData.clear(),this.highlighter.clearAllHighlights(),this.isAmazonLogisticsPage=this.checkIfAmazonLogisticsPage(),this.isAmazonLogisticsPage&&await this.initialize()}setupPeriodicRefresh(){setInterval(async()=>{if(this.isInitialized&&"visible"===document.visibilityState)try{await this.refreshData()}catch(e){console.warn("Periodic refresh failed:",e)}},3e5)}async refreshData(){try{if(await this.serviceInferrer.initialize(),this.currentData=await this.dataParser.parseAllServiceTypes(),this.currentData.size>0){const e=this.dataParser.getMismatchedDSPs();e.length>0&&(e.length,this.highlighter.highlightAllMismatches(this.currentData))}}catch(e){throw console.error("Data refresh failed:",e),e}}async handleMessage(e,t){e.action;try{switch(e.action){case r:return await this.handleManualCheck(e);case s:return await this.handleScanRisks(e);case"refreshData":return await this.refreshData(),{success:!0};case"highlightMismatches":return await this.handleHighlightMismatches(e);case"extractManifest":return this.handleExtractManifest();case"extractBackbrief":return this.handleExtractBackbrief(e);case"getSummaryData":return this.handleGetSummaryData(e);case"getPageInfo":return this.handleGetPageInfo();default:return console.warn("Unknown message action:",e.action),{success:!1,error:"Unknown action"}}}catch(t){return d.logError(t,`ContentScriptManager.handleMessage.${e.action}`),{success:!1,error:t.message}}}async handleManualCheck(e){await this.refreshData();return{success:!0,summary:this.dataParser.getSummaryStats(),mismatches:this.dataParser.getMismatchedDSPs(),serviceTypes:Array.from(this.serviceInferrer.getCurrentPageServiceTypes()),timestamp:(new Date).toISOString()}}handleScanRisks(e){try{const e=this.backbriefExtractor.extractOngoingRisksFromPage();return{success:!0,risks:e,riskCount:e.length,timestamp:(new Date).toISOString()}}catch(e){return{success:!1,error:e.message,risks:[]}}}handleHighlightMismatches(e){const{serviceType:t,clear:r=!1}=e;if(r)return this.highlighter.clearAllHighlights(),{success:!0,action:"cleared"};if(t){const e=this.currentData.get(t);if(e){return{success:!0,serviceType:t,active:this.highlighter.toggleServiceTypeHighlighting(t,e)}}return{success:!1,error:`No data for service type: ${t}`}}return{success:!0,results:this.highlighter.highlightAllMismatches(this.currentData)}}handleExtractManifest(){try{const e=this.manifestExtractor.extractManifestTrackingMapFromPage();return{success:!0,data:e,count:Object.keys(e).length,timestamp:(new Date).toISOString()}}catch(e){return{success:!1,error:e.message,data:{}}}}handleExtractBackbrief(e){const{includeReasons:t=[],mapUnableToAccess:r=!0}=e;try{const e=this.backbriefExtractor.extractBackbriefFromPage(t,r);return{success:!0,data:e,count:e.length,timestamp:(new Date).toISOString()}}catch(e){return{success:!1,error:e.message,data:[]}}}handleGetSummaryData(e){const{targetDSPs:t=[],paidTimeMinutes:r=525}=e;try{const e=this.manifestExtractor.extractDSPSummariesFromRoutePlanning(t,r);return{success:!0,data:e,count:Object.keys(e).length,timestamp:(new Date).toISOString()}}catch(e){return{success:!1,error:e.message,data:{}}}}handleGetPageInfo(){return{success:!0,pageInfo:{url:window.location.href,title:document.title,isAmazonLogistics:this.isAmazonLogisticsPage,pageType:this.serviceInferrer.getPageType(),serviceTypes:Array.from(this.serviceInferrer.getCurrentPageServiceTypes()),isInitialized:this.isInitialized,dataCount:this.currentData.size,tableCount:document.querySelectorAll("table").length}}}getStatus(){return{initialized:this.isInitialized,isAmazonPage:this.isAmazonLogisticsPage,serviceTypes:Array.from(this.serviceInferrer.getCurrentPageServiceTypes()),dataCount:this.currentData.size,highlightStats:this.highlighter.getStatistics(),lastRefresh:this.dataParser.lastUpdateTime}}}const S=new f;window.dspContentManager=S,"undefined"!=typeof module&&module.exports&&(module.exports={ContentScriptManager:f})}();
