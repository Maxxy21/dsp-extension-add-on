!function(){"use strict";function e(e){if(!e||"string"!=typeof e)return!1;return/^[A-Za-z0-9]{3,6}$/.test(e.trim())}function t(e){if(!e||"string"!=typeof e)return!1;try{const t=new URL(e);return"https:"===t.protocol&&(t.hostname.includes("hooks.chime.aws")||t.hostname.includes("discord.com")||t.hostname.includes("slack.com"))}catch{return!1}}const s={cycle1:{name:"Standard Parcel",displayName:"Cycle 1 (Standard Parcel)",alarms:[{name:"checkDSP_cycle1_14",hour:14,minute:0},{name:"checkDSP_cycle1_1530",hour:15,minute:30}]},samedayB:{name:"Multi-Use",displayName:"Sameday B (Multi-Use)",alarms:[{name:"checkDSP_samedayB_10",hour:10,minute:0}]},samedayC:{name:"Sameday Parcel",displayName:"Sameday C (Sameday Parcel)",alarms:[{name:"checkDSP_samedayC_1415",hour:14,minute:15}]}},a={serviceTypes:{cycle1:!0,samedayB:!1,samedayC:!1},notificationsEnabled:!0,webhooks:{},schedulingBaseUrl:"",serviceAreaId:""},n={WEBHOOKS:"webhooks",NOTIFICATIONS_ENABLED:"notificationsEnabled",SERVICE_TYPES:"serviceTypes",SCHEDULING_BASE_URL:"schedulingBaseUrl",SERVICE_AREA_ID:"serviceAreaId",MANIFEST_DATA:"manifestData",BACKBRIEF_DATA:"backbriefData",TEMP_MANIFEST_MAP:"tempManifestMap"},i=[".csv",".xlsx",".xls"],o=",",r=5242880,l="utf-8",c="VALIDATION_ERROR",h="PARSING_ERROR",d="FILE_ERROR";class u extends Error{constructor(e,t,s={}){super(e),this.name=this.constructor.name,this.code=t,this.details=s,this.timestamp=(new Date).toISOString(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}toJSON(){return{name:this.name,message:this.message,code:this.code,details:this.details,timestamp:this.timestamp,stack:this.stack}}getUserMessage(){return this.details.userMessage||this.message}}class m extends u{constructor(e,t={}){super(e,c,t)}static fromFieldValidation(e,t,s){return new m(`Validation failed for field "${e}"`,{field:e,value:t,rule:s,userMessage:`Invalid ${e}. Please check the format and try again.`})}static fromMultipleFields(e){const t=e.map(e=>e.field).join(", ");return new m(`Validation failed for fields: ${t}`,{fieldErrors:e,userMessage:"Please correct the highlighted fields and try again."})}}class g extends u{constructor(e,t={}){super(e,h,t)}static fromCSVError(e,t,s){return new g(`CSV parsing failed at line ${t}`,{fileName:e,lineNumber:t,originalError:s?.message,userMessage:`Failed to parse file "${e}" at line ${t}. Please check the file format.`})}static fromExcelError(e,t){return new g(`Excel file parsing failed: ${e}`,{fileName:e,originalError:t?.message,userMessage:`Failed to parse Excel file "${e}". Please ensure it's a valid Excel file.`})}}class p extends u{constructor(e,t={}){super(e,d,t)}static fromFileRead(e,t){return new p(`File read failed: ${e}`,{fileName:e,originalError:t?.message,userMessage:`Failed to read file "${e}". Please ensure the file is not corrupted.`})}static fromFileSize(e,t,s){return new p(`File too large: ${e}`,{fileName:e,size:t,maxSize:s,userMessage:`File "${e}" is too large. Maximum size is ${Math.round(s/1024/1024)}MB.`})}static fromFileType(e,t,s){return new p(`Unsupported file type: ${t}`,{fileName:e,extension:t,allowedExtensions:s,userMessage:`File type "${t}" is not supported. Please use: ${s.join(", ")}`})}}class b{static logError(e,t=""){const s={context:t,timestamp:(new Date).toISOString(),error:e instanceof u?e.toJSON():{name:e.name,message:e.message,stack:e.stack}};console.error("Extension Error:",s),"undefined"!=typeof window&&window.gtag&&window.gtag("event","exception",{description:e.message,fatal:!1})}static notifyUser(e,t="An unexpected error occurred"){const s=e instanceof u?e.getUserMessage():t;browser?.notifications?.create&&browser.notifications.create({type:"basic",iconUrl:"icons/icon.svg",title:"DSP Extension Error",message:s}).catch(console.error),console.warn("User notification:",s)}static async handleAsyncError(e,t=""){try{return await e}catch(e){throw this.logError(e,t),e}}static createErrorBoundary(e,t=""){return async(...s)=>{try{return await e(...s)}catch(e){throw this.logError(e,t),this.notifyUser(e),e}}}}function f(e,t=""){return b.createErrorBoundary(e,t)}class y{constructor(){this.uploadHistory=[],this.isProcessing=!1,this.elements={}}initialize(e){this.elements=e,this.setupEventListeners(),this.setupDropZones()}setupEventListeners(){["manifestFileInput","backbriefFileInput","batchFileInput"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("change",f(t=>this.handleFileSelect(t,e),"FileUploadManager.handleFileSelect"))});["uploadManifestBtn","uploadBackbriefBtn","uploadBatchBtn"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("click",f(()=>this.triggerFileSelect(e),"FileUploadManager.triggerFileSelect"))});["clearManifestBtn","clearBackbriefBtn","clearBatchBtn"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("click",f(()=>this.clearUploadedData(e),"FileUploadManager.clearUploadedData"))})}setupDropZones(){document.querySelectorAll(".file-drop-zone").forEach(e=>{e.addEventListener("dragover",t=>{t.preventDefault(),e.classList.add("drag-over")}),e.addEventListener("dragleave",()=>{e.classList.remove("drag-over")}),e.addEventListener("drop",f(t=>this.handleFileDrop(t,e),"FileUploadManager.handleFileDrop"))})}async handleFileSelect(e,t){const s=e.target.files[0];if(!s)return;const a=this.getUploadTypeFromInputId(t);await this.processFile(s,a)}async handleFileDrop(e,t){e.preventDefault(),t.classList.remove("drag-over");const s=Array.from(e.dataTransfer.files);if(0===s.length)return;const a=s[0],n=t.getAttribute("data-upload-type");n&&await this.processFile(a,n)}triggerFileSelect(e){const t={uploadManifestBtn:"manifestFileInput",uploadBackbriefBtn:"backbriefFileInput",uploadBatchBtn:"batchFileInput"}[e],s=document.getElementById(t);s&&s.click()}async processFile(e,t){if(this.isProcessing)throw new Error("File processing already in progress");try{this.isProcessing=!0,e.name,this.validateFile(e),this.updateUploadStatus(t,"Processing file...","info");const s=await this.parseFile(e,t);return await this.saveUploadedData(t,s,e.name),this.updateUploadStatus(t,`File processed: ${s.length||Object.keys(s).length} records`,"success"),this.updateFileInfo(t,e,s),this.addToHistory(t,e.name,s),e.name,{success:!0,data:s,fileName:e.name,uploadType:t,recordCount:Array.isArray(s)?s.length:Object.keys(s).length}}catch(e){throw console.error("File processing failed:",e),this.updateUploadStatus(t,`Error: ${e.message}`,"error"),e}finally{this.isProcessing=!1}}validateFile(e){if(e.size>r)throw p.fromFileSize(e.name,e.size,r);if(!function(e,t=[".csv",".xlsx",".xls"]){if(!e||"string"!=typeof e)return!1;const s=e.toLowerCase().substring(e.lastIndexOf("."));return t.includes(s)}(e.name,i)){const t=e.name.substring(e.name.lastIndexOf("."));throw p.fromFileType(e.name,t,i)}}async parseFile(e,t){const s=e.name.toLowerCase().substring(e.name.lastIndexOf("."));try{if(".csv"===s)return await this.parseCSVFile(e,t);if(".xlsx"===s||".xls"===s)return await this.parseExcelFile(e,t);throw new Error(`Unsupported file format: ${s}`)}catch(a){throw new g(`Failed to parse ${s} file`,{fileName:e.name,uploadType:t,originalError:a.message})}}async parseCSVFile(e,t){const s=await this.readFileAsText(e);if(!s.trim())throw new Error("File is empty");const a=function(e,t={}){const{delimiter:s=",",headers:a=!0,skipEmptyLines:n=!0}=t;if(!e||"string"!=typeof e)return[];const i=e.trim().split("\n");if(0===i.length)return[];let o=null,r=i;return a&&(o=i[0].split(s).map(e=>e.trim()),r=i.slice(1)),r.filter(e=>!n||e.trim()).map((e,t)=>{const n=e.split(s).map(e=>e.trim());if(a&&o){const e={};return o.forEach((t,s)=>{e[t]=n[s]||""}),e}return n}).filter(e=>e&&(Array.isArray(e)?e.length>0:Object.keys(e).length>0))}(s,{delimiter:o,headers:!0,skipEmptyLines:!0});return this.processUploadData(a,t)}parseExcelFile(e,t){throw new Error("Excel file parsing not yet implemented in refactored version")}processUploadData(e,t){switch(t){case"manifest":return this.processManifestData(e);case"backbrief":return this.processBackbriefData(e);case"batch":return this.processBatchData(e);default:throw new Error(`Unknown upload type: ${t}`)}}processManifestData(e){const t={};for(const s of e){const e=s.tracking||s["Tracking ID"]||s["Package ID"],a=s.dsp||s.DSP||s["DSP Code"];e&&a&&(t[e]={dsp:a,route:s.route||s.Route,driver:s.driver||s.Driver,status:s.status||s.Status||"Pending",uploadedAt:(new Date).toISOString()})}if(0===Object.keys(t).length)throw new Error("No valid manifest entries found. Expected columns: tracking, dsp");return t}processBackbriefData(e){const t=[];for(const s of e){const e=s.tracking||s["Tracking ID"]||s["Package ID"],a=s.reason||s.Reason||s["Failure Reason"];(e||a)&&t.push({tracking:e||"Unknown",dsp:s.dsp||s.DSP||"Unknown",reason:a||"Unknown",status:s.status||s.Status||"Failed",attempt:parseInt(s.attempt||s.Attempt||"1",10),uploadedAt:(new Date).toISOString()})}if(0===t.length)throw new Error("No valid backbrief entries found. Expected columns: tracking, reason");return t}processBatchData(e){const t=[];for(const s of e){const e=s.dsp||s.DSP||s["DSP Code"],a=s.message||s.Message;e&&t.push({dsp:e,message:a||"Default message",uploadedAt:(new Date).toISOString()})}if(0===t.length)throw new Error("No valid batch entries found. Expected columns: dsp");return t}async saveUploadedData(e,t,s){const a=this.getStorageKeyForUploadType(e),n={data:t,fileName:s,uploadedAt:(new Date).toISOString(),recordCount:Array.isArray(t)?t.length:Object.keys(t).length};await browser.storage.local.set({[a]:n})}async clearUploadedData(e){const t={clearManifestBtn:"manifest",clearBackbriefBtn:"backbrief",clearBatchBtn:"batch"}[e];if(t)try{const e=this.getStorageKeyForUploadType(t);await browser.storage.local.remove(e),this.updateUploadStatus(t,"Data cleared","info"),this.clearFileInfo(t)}catch(e){console.error(`Failed to clear ${t} data:`,e),this.updateUploadStatus(t,"Failed to clear data","error")}}getUploadTypeFromInputId(e){return{manifestFileInput:"manifest",backbriefFileInput:"backbrief",batchFileInput:"batch"}[e]||"unknown"}getStorageKeyForUploadType(e){return{manifest:"manifestData",backbrief:"backbriefData",batch:"batchData"}[e]||`${e}Data`}updateUploadStatus(e,t,s="info"){const a=document.getElementById(`${e}Status`);a&&(a.textContent=t,a.className=`upload-status ${s}`)}updateFileInfo(e,t,s){const a=document.getElementById(`${e}Info`);if(a){const e=Array.isArray(s)?s.length:Object.keys(s).length;a.textContent="";const n=document.createElement("div");n.className="file-info";const i=document.createElement("strong");i.textContent=t.name,n.appendChild(i),n.appendChild(document.createElement("br"));const o=document.createTextNode(`Size: ${this.formatFileSize(t.size)}`);n.appendChild(o),n.appendChild(document.createElement("br"));const r=document.createTextNode(`Records: ${e}`);n.appendChild(r),n.appendChild(document.createElement("br"));const l=document.createTextNode(`Uploaded: ${(new Date).toLocaleString()}`);n.appendChild(l),a.appendChild(n)}}clearFileInfo(e){const t=document.getElementById(`${e}Info`);t&&(t.textContent="")}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024)),s=(e/Math.pow(1024,t)).toFixed(2);return`${parseFloat(s)} ${["Bytes","KB","MB","GB"][t]}`}readFileAsText(e){return new Promise((t,s)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=()=>s(p.fromFileRead(e.name,a.error)),a.readAsText(e,l)})}addToHistory(e,t,s){const a=Array.isArray(s)?s.length:Object.keys(s).length;this.uploadHistory.unshift({uploadType:e,fileName:t,recordCount:a,timestamp:(new Date).toISOString()}),this.uploadHistory=this.uploadHistory.slice(0,10)}getStatistics(){return{uploadHistory:this.uploadHistory,isProcessing:this.isProcessing,totalUploads:this.uploadHistory.length,lastUpload:this.uploadHistory[0]||null}}}const w=new class{constructor(){this.storage=browser.storage.local,this.cache=new Map,this.cacheExpiry=new Map,this.cacheTTL=3e5}async get(e,t=null){try{if(this.isCacheValid(e))return this.cache.get(e);const s=await this.storage.get(e),a=void 0!==s[e]?s[e]:t;return this.setCache(e,a),a}catch(s){return console.error(`Storage get error for key "${e}":`,s),t}}async getMultiple(e){try{const t=await this.storage.get(e);return e.forEach(e=>{void 0!==t[e]&&this.setCache(e,t[e])}),t}catch(e){return console.error("Storage getMultiple error:",e),{}}}async set(e,t){try{return await this.storage.set({[e]:t}),this.setCache(e,t),!0}catch(t){return console.error(`Storage set error for key "${e}":`,t),!1}}async setMultiple(e){try{return await this.storage.set(e),Object.entries(e).forEach(([e,t])=>{this.setCache(e,t)}),!0}catch(e){return console.error("Storage setMultiple error:",e),!1}}async remove(e){try{return await this.storage.remove(e),this.cache.delete(e),this.cacheExpiry.delete(e),!0}catch(t){return console.error(`Storage remove error for key "${e}":`,t),!1}}async clear(){try{return await this.storage.clear(),this.cache.clear(),this.cacheExpiry.clear(),!0}catch(e){return console.error("Storage clear error:",e),!1}}async getAll(){try{return await this.storage.get(null)}catch(e){return console.error("Storage getAll error:",e),{}}}getWebhooks(){return this.get(n.WEBHOOKS,{})}setWebhooks(e){return this.set(n.WEBHOOKS,e)}getNotificationsEnabled(){return this.get(n.NOTIFICATIONS_ENABLED,a.notificationsEnabled)}setNotificationsEnabled(e){return this.set(n.NOTIFICATIONS_ENABLED,e)}getServiceTypes(){return this.get(n.SERVICE_TYPES,a.serviceTypes)}setServiceTypes(e){return this.set(n.SERVICE_TYPES,e)}getSchedulingBaseUrl(){return this.get(n.SCHEDULING_BASE_URL,a.schedulingBaseUrl)}setSchedulingBaseUrl(e){return this.set(n.SCHEDULING_BASE_URL,e)}getServiceAreaId(){return this.get(n.SERVICE_AREA_ID,a.serviceAreaId)}setServiceAreaId(e){return this.set(n.SERVICE_AREA_ID,e)}setCache(e,t){this.cache.set(e,t),this.cacheExpiry.set(e,Date.now()+this.cacheTTL)}isCacheValid(e){return!(!this.cache.has(e)||!this.cacheExpiry.has(e))&&Date.now()<this.cacheExpiry.get(e)}clearExpiredCache(){const e=Date.now();for(const[t,s]of this.cacheExpiry.entries())e>=s&&(this.cache.delete(t),this.cacheExpiry.delete(t))}async initialize(){try{const e=await this.getAll(),t={};Object.entries(a).forEach(([s,a])=>{const i=n[s.toUpperCase()]||s;void 0===e[i]&&(t[i]=a)}),Object.keys(t).length>0&&await this.setMultiple(t),setInterval(()=>this.clearExpiredCache(),this.cacheTTL)}catch(e){console.error("Storage initialization error:",e)}}},k={paidTimeMinutes:{elementKey:"paidTimeMinutes",type:"number",defaultValue:525,label:"Paid Time"},serviceAreaId:{elementKey:"serviceAreaId",type:"text",defaultValue:"",label:"Service Area ID"},schedulingBaseUrl:{elementKey:"schedulingUrl",type:"text",defaultValue:"",label:"Scheduling Base URL"},routePlanningBaseUrl:{elementKey:"routePlanningUrl",type:"text",defaultValue:"",label:"Route Planning Base URL"},riskDashboardUrl:{elementKey:"riskDashboardUrl",type:"text",defaultValue:"",label:"Risk Dashboard URL"},slackWebhookUrl:{elementKey:"slackWebhookUrl",type:"text",defaultValue:"",label:"Slack Webhook URL"},formatManualMessagesForChime:{elementKey:"formatChimeManual",type:"boolean",defaultValue:!0,label:"Format Messages for Chime"},riskAlertsEnabled:{elementKey:"enableRiskAlerts",type:"boolean",defaultValue:!1,label:"Risk Alerts"},slackUseChimeMarkdown:{elementKey:"slackUseChimeMarkdown",type:"boolean",defaultValue:!1,label:"Use Chime Markdown in Slack"},inferPaidTime:{elementKey:"inferPaidTime",type:"boolean",defaultValue:!1,label:"Infer Paid Time from Constraints"}};class E{constructor(){this.settings={},this.elements={}}initialize(e){this.elements=e,this.setupEventListeners(),this.loadSettings()}setupEventListeners(){this.elements.enableNotifications&&this.elements.enableNotifications.addEventListener("change",f(this.handleNotificationToggle.bind(this),"SettingsManager.handleNotificationToggle")),Object.keys(s).forEach(e=>{const t=document.getElementById(`serviceType_${e}`);t&&t.addEventListener("change",f(()=>this.handleServiceTypeToggle(e),"SettingsManager.handleServiceTypeToggle"))}),Object.entries(k).forEach(([e,t])=>{const s=this.getElement(t.elementKey);s&&s.addEventListener("change",f(s=>this.handleConfiguredSettingChange(e,t,s),`SettingsManager.handleSettingChange.${e}`))})}getElement(e){return this.elements?.[e]||document.getElementById(e)}async loadSettings(){try{const[e,t]=await Promise.all([w.getNotificationsEnabled(),w.getServiceTypes()]),s=await this.loadStoredSettings();this.elements.enableNotifications&&(this.elements.enableNotifications.checked=e),Object.entries(t).forEach(([e,t])=>{const s=document.getElementById(`serviceType_${e}`);s&&(s.checked=t)}),this.updateGeneralSettingsUI(s)}catch(e){console.error("Failed to load settings:",e),this.showError("Failed to load settings")}}async loadStoredSettings(){try{const e=await browser.storage.local.get(["settings"]);return this.settings=e.settings||{},this.settings}catch(e){return console.warn("Failed to load general settings:",e),this.settings={},this.settings}}updateGeneralSettingsUI(e){Object.entries(k).forEach(([t,s])=>{const a=this.getElement(s.elementKey);if(!a)return;const n=e[t],i=void 0!==n?n:s.defaultValue;"boolean"===s.type?a.checked=Boolean(i):a.value=i??""})}async handleNotificationToggle(e){try{const t=e.target.checked;await w.setNotificationsEnabled(t),await browser.runtime.sendMessage({action:"updateNotificationSettings",enabled:t}),this.showSuccess("Notifications "+(t?"enabled":"disabled"))}catch(t){console.error("Failed to update notifications:",t),this.showError("Failed to update notification settings"),e.target.checked=!e.target.checked}}async handleServiceTypeToggle(e){try{const t=document.getElementById(`serviceType_${e}`);if(!t)return;const a=await w.getServiceTypes();a[e]=t.checked,await w.setServiceTypes(a),this.showSuccess(`${s[e]?.displayName||e} ${t.checked?"enabled":"disabled"}`)}catch(e){console.error("Failed to update service type:",e),this.showError("Failed to update service type settings")}}async handleConfiguredSettingChange(e,t,s){try{const a="boolean"===t.type?s.target.checked:(s.target.value??"").trim(),n=this.parseSettingValue(e,t,a);await this.saveGeneralSetting(e,n);const i=this.getSettingLabel(e),o="boolean"===t.type?`${i} ${n?"enabled":"disabled"}`:`${i} updated`;this.showSuccess(o)}catch(s){console.error(`Failed to update ${e}:`,s),this.showError(`Failed to update ${this.getSettingLabel(e)}`),this.resetSettingField(e,t)}}parseSettingValue(e,t,s){if("number"===t.type){const e=parseInt(s,10);if(Number.isNaN(e)||e<0)throw new Error("Paid time must be a positive number");return e}return"boolean"===t.type?Boolean(s):"string"==typeof s?s.trim():s}async saveGeneralSetting(e,t){this.settings||await this.loadStoredSettings(),this.settings={...this.settings,[e]:t},await browser.storage.local.set({settings:this.settings})}getSettingLabel(e){return k[e]?.label||e}resetSettingField(e,t){const s=this.getElement(t.elementKey);if(!s)return;const a=this.getSettingValue(e);"boolean"===t.type?s.checked=Boolean(a):s.value=a??""}getSettingValue(e){return this.settings&&void 0!==this.settings[e]?this.settings[e]:k[e]?.defaultValue}async getSettingsSnapshot(){return this.settings||await this.loadStoredSettings(),{...this.settings}}async resetSettings(){try{if(!confirm("Are you sure you want to reset all settings to defaults? This cannot be undone."))return;await w.setNotificationsEnabled(!0),await w.setServiceTypes({cycle1:!0,samedayB:!1,samedayC:!1}),await browser.storage.local.set({settings:{paidTimeMinutes:525,formatManualMessagesForChime:!0,riskAlertsEnabled:!1,slackUseChimeMarkdown:!1,inferPaidTime:!1,serviceAreaId:"",schedulingBaseUrl:"",routePlanningBaseUrl:"",riskDashboardUrl:"",slackWebhookUrl:""}}),await this.loadSettings(),this.showSuccess("Settings reset to defaults")}catch(e){console.error("Failed to reset settings:",e),this.showError("Failed to reset settings")}}async exportSettings(){try{const[e,t,s]=await Promise.all([w.getNotificationsEnabled(),w.getServiceTypes(),this.getSettingsSnapshot()]),a={notificationsEnabled:e,serviceTypes:t,settings:s,exportDate:(new Date).toISOString(),version:browser.runtime.getManifest().version},n=new Blob([JSON.stringify(a,null,2)],{type:"application/json"}),i=URL.createObjectURL(n),o=document.createElement("a");o.href=i,o.download=`dsp-extension-settings-${(new Date).toISOString().slice(0,10)}.json`,o.click(),URL.revokeObjectURL(i),this.showSuccess("Settings exported successfully")}catch(e){console.error("Failed to export settings:",e),this.showError("Failed to export settings")}}importSettings(){try{const e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=async e=>{const t=e.target.files[0];if(t)try{const e=await this.readFileAsText(t),s=JSON.parse(e);if(!this.validateImportData(s))throw new Error("Invalid settings file format");void 0!==s.notificationsEnabled&&await w.setNotificationsEnabled(s.notificationsEnabled),s.serviceTypes&&await w.setServiceTypes(s.serviceTypes),s.settings&&await browser.storage.local.set({settings:s.settings}),await this.loadSettings(),this.showSuccess("Settings imported successfully")}catch(e){console.error("Import failed:",e),this.showError("Failed to import settings")}},e.click()}catch(e){console.error("Import setup failed:",e),this.showError("Failed to set up import")}}validateImportData(e){if(!e||"object"!=typeof e)return!1;return!(void 0!==e.notificationsEnabled&&"boolean"!=typeof e.notificationsEnabled||void 0!==e.serviceTypes&&"object"!=typeof e.serviceTypes||void 0!==e.settings&&"object"!=typeof e.settings)}readFileAsText(e){return new Promise((t,s)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=()=>s(a.error),a.readAsText(e)})}showSuccess(e){this.showToast(e,"success")}showError(e){this.showToast(e,"error")}showToast(e,t="info"){const s=document.getElementById("toast");s&&(s.textContent=e,s.className=`toast ${t} show`,setTimeout(()=>{s.className="toast"},3e3))}}class S{constructor(){this.webhooks={},this.elements={webhookEntries:null,addWebhookBtn:null,batchDropZone:null,batchTextInput:null,showTextInputBtn:null,processBatchBtn:null,cancelBatchBtn:null},this.testResults=new Map,this.isTestingWebhooks=!1,this.autoSaveTimeout=null}initialize(e){this.elements={...this.elements,...e},this.setupEventListeners(),this.loadWebhooks()}setupEventListeners(){if(this.elements.addWebhookBtn&&this.elements.addWebhookBtn.addEventListener("click",f(this.addWebhookEntry.bind(this),"WebhookManager.addWebhookEntry")),this.elements.showTextInputBtn&&this.elements.showTextInputBtn.addEventListener("click",f(()=>this.toggleBatchTextInput(!0),"WebhookManager.showBatchInput")),this.elements.cancelBatchBtn&&this.elements.cancelBatchBtn.addEventListener("click",f(()=>this.toggleBatchTextInput(!1),"WebhookManager.cancelBatchInput")),this.elements.processBatchBtn&&this.elements.processBatchBtn.addEventListener("click",f(this.handleBatchTextSubmit.bind(this),"WebhookManager.handleBatchTextSubmit")),this.elements.batchDropZone){const e=this.elements.batchDropZone;e.addEventListener("dragover",t=>{t.preventDefault(),e.classList.add("drag-over")}),e.addEventListener("dragleave",()=>{e.classList.remove("drag-over")}),e.addEventListener("drop",f(this.handleBatchDrop.bind(this),"WebhookManager.handleBatchDrop")),e.addEventListener("click",()=>{this.toggleBatchTextInput(!0),this.elements.batchTextInput?.focus()})}this.elements.webhookEntries&&(this.elements.webhookEntries.addEventListener("click",f(this.handleContainerClick.bind(this),"WebhookManager.handleContainerClick")),this.elements.webhookEntries.addEventListener("input",f(this.handleContainerInput.bind(this),"WebhookManager.handleContainerInput")))}async loadWebhooks(){try{this.webhooks=await w.getWebhooks(),this.renderWebhookEntries(),Object.keys(this.webhooks).length}catch(e){console.error("Failed to load webhooks:",e),this.showError("Failed to load webhook configurations")}}async saveWebhooks(e={}){const{silent:t=!1}=e;try{await w.setWebhooks(this.webhooks),t||this.showSuccess("Webhook configurations saved")}catch(e){throw console.error("Failed to save webhooks:",e),this.showError("Failed to save webhook configurations"),e}}renderWebhookEntries(){this.elements.webhookEntries&&(this.elements.webhookEntries.textContent="",Object.entries(this.webhooks).forEach(([e,t])=>{this.createWebhookEntry(e,t)}),this.createWebhookEntry("",""),this.updateWebhookCount())}createWebhookEntry(e="",t=""){const s=document.createElement("div");s.className="webhook-entry",s.dataset.dspCode=e;const a=document.createElement("div");a.className="webhook-fields";const n=document.createElement("input");n.type="text",n.className="dsp-code-input",n.placeholder="DSP Code (e.g., DHH1)",n.maxLength=10,n.value=e;const i=document.createElement("input");i.type="url",i.className="webhook-url-input",i.placeholder="Webhook URL (https://hooks.chime.aws/...)",i.value=t;const o=document.createElement("div");o.className="webhook-actions";const r=document.createElement("button");r.type="button",r.className="btn btn-small test-webhook",r.title="Test Webhook",r.textContent="🧪 Test";const l=document.createElement("button");l.type="button",l.className="btn btn-small btn-danger remove-webhook",l.title="Remove",l.textContent="🗑️",o.appendChild(r),o.appendChild(l),a.appendChild(n),a.appendChild(i),a.appendChild(o);const c=document.createElement("div");return c.className="webhook-status",s.appendChild(a),s.appendChild(c),this.elements.webhookEntries.appendChild(s),this.validateWebhookEntry(s),s}addWebhookEntry(){this.createWebhookEntry("",""),this.updateWebhookCount();const e=this.elements.webhookEntries.lastElementChild,t=e?.querySelector(".dsp-code-input");t&&t.focus()}handleContainerClick(e){const{target:t}=e;t.classList.contains("remove-webhook")?this.removeWebhookEntry(t.closest(".webhook-entry")):t.classList.contains("test-webhook")&&this.testWebhookEntry(t.closest(".webhook-entry"))}handleContainerInput(e){const{target:t}=e,s=t.closest(".webhook-entry");if(!s)return;this.validateWebhookEntry(s);const a=s.querySelector(".dsp-code-input"),n=s.querySelector(".webhook-url-input");s===this.elements.webhookEntries.lastElementChild&&a?.value.trim()&&n?.value.trim()&&this.addWebhookEntry(),this.debounceAutoSave()}toggleBatchTextInput(e){const t=this.elements.batchTextInput,s=this.elements.processBatchBtn,a=this.elements.cancelBatchBtn,n=this.elements.showTextInputBtn;t&&s&&a&&n&&(t.style.display=e?"block":"none",s.style.display=e?"inline-flex":"none",a.style.display=e?"inline-flex":"none",n.style.display=e?"none":"inline-flex",e||(t.value=""))}async handleBatchTextSubmit(){const e=this.elements.batchTextInput;if(!e)return;await this.processBatchContent(e.value)>0&&this.toggleBatchTextInput(!1)}async handleBatchDrop(e){e.preventDefault(),this.elements.batchDropZone?.classList.remove("drag-over");const{dataTransfer:t}=e;if(!t)return;if(t.files&&t.files.length>0){const e=t.files[0];try{const t=await this.readFileAsText(e);await this.processBatchContent(t)}catch(e){console.error("Batch drop failed:",e),this.showError("Failed to read dropped file")}return}const s=t.getData("text")||t.getData("text/plain");s?await this.processBatchContent(s):this.showInfo("No text data detected in drop")}async processBatchContent(e){if(!e||!e.trim())return this.showError("No webhook data provided"),0;const{records:t,skipped:s}=this.parseBatchRecords(e);if(0===t.length)return this.showError("No valid webhook entries found"),0;t.forEach(({dspCode:e,webhookUrl:t})=>{this.webhooks[e]=t}),await this.saveWebhooks({silent:!0}),this.renderWebhookEntries(),this.elements.batchTextInput&&(this.elements.batchTextInput.value="");const a=t.length,n=s>0?`Imported ${a} webhooks. Skipped ${s} invalid entries.`:`Imported ${a} webhooks.`;return this.showSuccess(n),a}parseBatchRecords(s){const a=s.split(/\r?\n/).map(e=>e.trim()).filter(Boolean);a.length>0&&/dsp/i.test(a[0])&&/webhook/i.test(a[0])&&a.shift();const n=[];let i=0;return a.forEach(s=>{let a="",o="";const r=s.indexOf(","),l=s.indexOf("\t");if(-1!==r&&(-1===l||r<l))a=s.slice(0,r).trim(),o=s.slice(r+1).trim();else if(-1!==l)a=s.slice(0,l).trim(),o=s.slice(l+1).trim();else{const e=s.split(/\s+/);a=e.shift()?.trim()||"",o=e.join(" ").trim()}a=a.replace(/^"|"$/g,""),o=o.replace(/^"|"$/g,""),e(a)&&t(o)?n.push({dspCode:a,webhookUrl:o}):i++}),{records:n,skipped:i}}removeWebhookEntry(e){if(!e)return;const t=e.querySelector(".dsp-code-input"),s=t?.value.trim();s&&this.webhooks[s]&&delete this.webhooks[s],e.remove(),this.saveWebhooks(),this.updateWebhookCount()}async testWebhookEntry(s){if(!s||this.isTestingWebhooks)return;const a=s.querySelector(".dsp-code-input"),n=s.querySelector(".webhook-url-input"),i=s.querySelector(".webhook-status"),o=a?.value.trim(),r=n?.value.trim();if(o&&r)try{if(this.isTestingWebhooks=!0,this.showEntryStatus(i,"Testing webhook...","info"),!e(o))throw new m("Invalid DSP code format");if(!t(r))throw new m("Invalid webhook URL");const s=await browser.runtime.sendMessage({action:"testWebhook",dspCode:o,webhookUrl:r});if(!s||!s.success)throw new Error(s?.error||"Test failed");this.showEntryStatus(i,"Test successful! ✅","success"),this.testResults.set(o,{success:!0,timestamp:Date.now()})}catch(e){console.error(`Webhook test failed for ${o}:`,e),this.showEntryStatus(i,`Test failed: ${e.message}`,"error"),this.testResults.set(o,{success:!1,error:e.message,timestamp:Date.now()})}finally{this.isTestingWebhooks=!1}else this.showEntryStatus(i,"Please fill in both DSP code and webhook URL","error")}validateWebhookEntry(s){const a=s.querySelector(".dsp-code-input"),n=s.querySelector(".webhook-url-input");if(!a||!n)return;const i=s.dataset.dspCode,o=a.value.trim(),r=n.value.trim();if(a.classList.remove("valid","invalid"),n.classList.remove("valid","invalid"),o&&(e(o)?a.classList.add("valid"):(a.classList.add("invalid"),a.title="DSP code should be 3-6 alphanumeric characters (e.g., DHH1)")),r&&(t(r)?n.classList.add("valid"):(n.classList.add("invalid"),n.title="Must be a valid HTTPS webhook URL")),i&&i!==o&&this.webhooks[i]&&delete this.webhooks[i],!o||!r)return i&&!o&&this.webhooks[i]&&delete this.webhooks[i],void(s.dataset.dspCode=o||"");e(o)&&t(r)&&(this.webhooks[o]=r,s.dataset.dspCode=o)}showEntryStatus(e,t,s="info"){e&&(e.textContent=t,e.className=`webhook-status ${s}`,setTimeout(()=>{e.textContent="",e.className="webhook-status"},5e3))}updateWebhookCount(){const e=Object.keys(this.webhooks).length,t=document.getElementById("webhookCount");t&&(t.textContent=e)}readFileAsText(e){return new Promise((t,s)=>{const a=new FileReader;a.onload=()=>t(a.result),a.onerror=()=>s(a.error),a.readAsText(e)})}debounceAutoSave(){clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=setTimeout(()=>{this.saveWebhooks({silent:!0})},1e3)}async testAllWebhooks(){if(this.isTestingWebhooks)return;const e=Object.keys(this.webhooks);if(0!==e.length)try{this.isTestingWebhooks=!0,this.showInfo(`Testing ${e.length} webhooks...`);const t=Array.from(this.elements.webhookEntries.children).map(e=>{const t=e.querySelector(".dsp-code-input"),s=t?.value.trim();if(s&&this.webhooks[s])return this.testWebhookEntry(e)}).filter(Boolean);await Promise.allSettled(t);const s=Array.from(this.testResults.values()).filter(e=>e.success).length;this.showSuccess(`Webhook testing complete: ${s}/${e.length} successful`)}catch(e){console.error("Bulk webhook testing failed:",e),this.showError("Failed to test webhooks")}finally{this.isTestingWebhooks=!1}else this.showError("No webhooks to test")}getStatistics(){const e=Array.from(this.testResults.values()),t=e.filter(e=>e.success).length;return{totalWebhooks:Object.keys(this.webhooks).length,testedWebhooks:e.length,successfulTests:t,isTestingInProgress:this.isTestingWebhooks,lastTestTime:e.length>0?Math.max(...e.map(e=>e.timestamp)):null}}showSuccess(e){this.showToast(e,"success")}showError(e){this.showToast(e,"error")}showInfo(e){this.showToast(e,"info")}showToast(e,t="info"){const s=document.getElementById("toast");s&&(s.textContent=e,s.className=`toast ${t} show`,setTimeout(()=>{s.className="toast"},3e3))}}class B{constructor(){this.fileUploadManager=null,this.settingsManager=null,this.webhookManager=null,this.isLoading=!1,this.elements={},this.setupPolyfill(),this.initialize()}setupPolyfill(){"undefined"==typeof browser&&"undefined"!=typeof chrome&&(window.browser=chrome)}async initialize(){try{"loading"===document.readyState&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),this.cacheElements(),this.initializeManagers(),this.setupGlobalEventListeners(),await this.loadInitialData()}catch(e){b.logError(e,"OptionsManager.initialize"),this.showError("Failed to initialize options page")}}cacheElements(){this.elements={manifestFileInput:document.getElementById("manifestFileInput"),backbriefFileInput:document.getElementById("backbriefFileInput"),batchFileInput:document.getElementById("batchFileInput"),uploadManifestBtn:document.getElementById("uploadManifestBtn"),uploadBackbriefBtn:document.getElementById("uploadBackbriefBtn"),uploadBatchBtn:document.getElementById("uploadBatchBtn"),clearManifestBtn:document.getElementById("clearManifestBtn"),clearBackbriefBtn:document.getElementById("clearBackbriefBtn"),clearBatchBtn:document.getElementById("clearBatchBtn"),manifestStatus:document.getElementById("manifestStatus"),backbriefStatus:document.getElementById("backbriefStatus"),batchStatus:document.getElementById("batchStatus"),manifestInfo:document.getElementById("manifestInfo"),backbriefInfo:document.getElementById("backbriefInfo"),batchInfo:document.getElementById("batchInfo"),enableNotifications:document.getElementById("enableNotifications"),paidTimeMinutes:document.getElementById("paidTimeMinutes"),serviceAreaId:document.getElementById("serviceAreaId"),schedulingBaseUrl:document.getElementById("schedulingUrl"),routePlanningBaseUrl:document.getElementById("routePlanningUrl"),riskDashboardUrl:document.getElementById("riskDashboardUrl"),formatManualMessagesForChime:document.getElementById("formatChimeManual"),riskAlertsEnabled:document.getElementById("enableRiskAlerts"),inferPaidTime:document.getElementById("inferPaidTime"),webhookEntries:document.getElementById("webhookEntries"),addWebhookBtn:document.getElementById("addWebhook"),batchDropZone:document.getElementById("batchDropZone"),batchTextInput:document.getElementById("batchTextInput"),showTextInputBtn:document.getElementById("showTextInput"),processBatchBtn:document.getElementById("processBatch"),cancelBatchBtn:document.getElementById("cancelBatch"),chimeUrl:document.getElementById("chimeUrl"),slackUrl:document.getElementById("slackUrl"),discordUrl:document.getElementById("discordUrl"),slackWebhookUrl:document.getElementById("slackWebhookUrl"),slackUseChimeMarkdown:document.getElementById("slackUseChimeMarkdown"),testChimeBtn:document.getElementById("testChimeBtn"),testSlackBtn:document.getElementById("testSlackBtn"),testDiscordBtn:document.getElementById("testDiscordBtn"),clearWebhooksBtn:document.getElementById("clearWebhooksBtn"),resetSettingsBtn:document.getElementById("resetSettingsBtn"),exportSettingsBtn:document.getElementById("exportSettingsBtn"),importSettingsBtn:document.getElementById("importSettingsBtn"),toast:document.getElementById("toast"),loadingIndicator:document.getElementById("loadingIndicator")}}initializeManagers(){this.fileUploadManager=new y,this.fileUploadManager.initialize({manifestFileInput:this.elements.manifestFileInput,backbriefFileInput:this.elements.backbriefFileInput,batchFileInput:this.elements.batchFileInput,uploadManifestBtn:this.elements.uploadManifestBtn,uploadBackbriefBtn:this.elements.uploadBackbriefBtn,uploadBatchBtn:this.elements.uploadBatchBtn,clearManifestBtn:this.elements.clearManifestBtn,clearBackbriefBtn:this.elements.clearBackbriefBtn,clearBatchBtn:this.elements.clearBatchBtn,manifestStatus:this.elements.manifestStatus,backbriefStatus:this.elements.backbriefStatus,batchStatus:this.elements.batchStatus,manifestInfo:this.elements.manifestInfo,backbriefInfo:this.elements.backbriefInfo,batchInfo:this.elements.batchInfo}),this.settingsManager=new E,this.settingsManager.initialize({enableNotifications:this.elements.enableNotifications,paidTimeMinutes:this.elements.paidTimeMinutes,serviceAreaId:this.elements.serviceAreaId,schedulingBaseUrl:this.elements.schedulingBaseUrl,routePlanningBaseUrl:this.elements.routePlanningBaseUrl,riskDashboardUrl:this.elements.riskDashboardUrl,formatManualMessagesForChime:this.elements.formatManualMessagesForChime,riskAlertsEnabled:this.elements.riskAlertsEnabled,inferPaidTime:this.elements.inferPaidTime,slackWebhookUrl:this.elements.slackWebhookUrl,slackUseChimeMarkdown:this.elements.slackUseChimeMarkdown}),this.webhookManager=new S,this.webhookManager.initialize({webhookEntries:this.elements.webhookEntries,addWebhookBtn:this.elements.addWebhookBtn,batchDropZone:this.elements.batchDropZone,batchTextInput:this.elements.batchTextInput,showTextInputBtn:this.elements.showTextInputBtn,processBatchBtn:this.elements.processBatchBtn,cancelBatchBtn:this.elements.cancelBatchBtn})}setupGlobalEventListeners(){this.elements.resetSettingsBtn&&this.elements.resetSettingsBtn.addEventListener("click",f(this.handleResetSettings.bind(this),"OptionsManager.handleResetSettings")),this.elements.exportSettingsBtn&&this.elements.exportSettingsBtn.addEventListener("click",f(this.handleExportSettings.bind(this),"OptionsManager.handleExportSettings")),this.elements.importSettingsBtn&&this.elements.importSettingsBtn.addEventListener("click",f(this.handleImportSettings.bind(this),"OptionsManager.handleImportSettings")),this.setupTabNavigation(),document.addEventListener("keydown",f(this.handleKeyboardShortcuts.bind(this),"OptionsManager.handleKeyboardShortcuts"))}setupTabNavigation(){const e=document.querySelector(".main.tabbed");if(!e)return;const t=document.querySelectorAll(".tabs .tab");if(0===t.length)return;t.forEach(s=>{s.addEventListener("click",s=>{const a=s.currentTarget.getAttribute("data-tab");a&&(t.forEach(e=>e.classList.remove("active")),s.currentTarget.classList.add("active"),e.setAttribute("data-active-tab",a),localStorage.setItem("dsp-options-active-tab",a))})});const s=localStorage.getItem("dsp-options-active-tab")||t[0].getAttribute("data-tab"),a=s?document.querySelector(`.tabs .tab[data-tab="${s}"]`):null;a?a.click():t[0]&&t[0].click()}async loadInitialData(){try{this.setLoading(!0),await this.updatePageTitle()}catch(e){console.warn("Failed to load initial data:",e),this.showError("Failed to load some page data")}finally{this.setLoading(!1)}}updatePageTitle(){try{const e=browser.runtime.getManifest(),t=document.querySelector("h1");t&&e.version&&(t.textContent=`DSP Management Extension - Options (v${e.version})`)}catch(e){console.warn("Failed to update page title:",e)}}async handleResetSettings(){if(confirm("Are you sure you want to reset ALL settings to defaults? This will affect:\n\n• File uploads (cleared)\n• General settings (reset)\n• Webhooks (cleared)\n\nThis action cannot be undone."))try{this.setLoading(!0),this.showToast("Resetting all settings...","info"),await Promise.all([this.settingsManager.resetSettings(),this.webhookManager.clearAllWebhooks(),this.clearAllFileData()]),this.showToast("All settings reset successfully","success")}catch(e){b.logError(e,"OptionsManager.handleResetSettings"),this.showToast("Failed to reset settings","error")}finally{this.setLoading(!1)}}async handleExportSettings(){try{this.setLoading(!0),await this.settingsManager.exportSettings()}catch(e){b.logError(e,"OptionsManager.handleExportSettings"),this.showToast("Failed to export settings","error")}finally{this.setLoading(!1)}}async handleImportSettings(){try{this.setLoading(!0),await this.settingsManager.importSettings()}catch(e){b.logError(e,"OptionsManager.handleImportSettings"),this.showToast("Failed to import settings","error")}finally{this.setLoading(!1)}}async clearAllFileData(){try{const e=["manifestData","backbriefData","batchData"];await browser.storage.local.remove(e),["manifest","backbrief","batch"].forEach(e=>{const t=document.getElementById(`${e}Status`),s=document.getElementById(`${e}Info`);t&&(t.textContent="No file uploaded",t.className="upload-status info"),s&&(s.textContent="")})}catch(e){throw console.error("Failed to clear file data:",e),e}}handleKeyboardShortcuts(e){return(e.ctrlKey||e.metaKey)&&"s"===e.key?(e.preventDefault(),void this.handleExportSettings()):(e.ctrlKey||e.metaKey)&&"o"===e.key?(e.preventDefault(),void this.handleImportSettings()):(e.ctrlKey||e.metaKey)&&"r"===e.key&&e.shiftKey?(e.preventDefault(),void this.handleResetSettings()):void 0}setLoading(e){this.isLoading=e,this.elements.loadingIndicator&&(this.elements.loadingIndicator.style.display=e?"block":"none"),document.body.style.cursor=e?"wait":""}showToast(e,t="info"){if(!this.elements.toast)return;this.elements.toast.textContent=e,this.elements.toast.className=`toast ${t} show`;setTimeout(()=>{this.elements.toast.className="toast"},"error"===t||"warning"===t?5e3:3e3)}showError(e){this.showToast(e,"error")}getStatistics(){return{isLoading:this.isLoading,fileUploadStats:this.fileUploadManager?.getStatistics(),webhookStats:this.webhookManager?.getStatistics(),activeTab:localStorage.getItem("dsp-options-active-tab")||"general"}}}const I=new B;window.dspOptionsManager=I,"undefined"!=typeof module&&module.exports&&(module.exports={OptionsManager:B})}();
